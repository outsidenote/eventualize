version: '3.8'

services:
  # Config Servers
  mongo_config_1:
    container_name: mongo-db-config-1
    image: mongo:8
    command: mongod --configsvr --replSet configRS --port 27017 --dbpath /data/db --bind_ip_all
    volumes:
      - mongo_config_1_data:/data/db
    networks:
      - mongodb-network
    restart: unless-stopped

  mongo_config_2:
    container_name: mongo-db-config-2
    image: mongo:8
    command: mongod --configsvr --replSet configRS --port 27017 --dbpath /data/db --bind_ip_all
    volumes:
      - mongo_config_2_data:/data/db
    networks:
      - mongodb-network
    restart: unless-stopped

  mongo_config_3:
    container_name: mongo-db-config-3
    image: mongo:8
    command: mongod --configsvr --replSet configRS --port 27017 --dbpath /data/db --bind_ip_all
    volumes:
      - mongo_config_3_data:/data/db
    networks:
      - mongodb-network
    restart: unless-stopped

  # Shard 1
  mongo_shard_1:
    container_name: mongo-db-shard-1
    image: mongo:8
    command: mongod --shardsvr --replSet shard1RS --port 27017 --dbpath /data/db --bind_ip_all
    volumes:
      - mongo_shard_1_data:/data/db
    networks:
      - mongodb-network
    restart: unless-stopped

  # Shard 2
  mongo_shard_2:
    container_name: mongo-db-shard-2
    image: mongo:8
    command: mongod --shardsvr --replSet shard2RS --port 27017 --dbpath /data/db --bind_ip_all
    volumes:
      - mongo_shard_2_data:/data/db
    networks:
      - mongodb-network
    restart: unless-stopped

  # Init Container - Ensures replica sets are initialized
  init-mongo:
    image: mongo:8
    container_name: mongo-init
    depends_on:
      - mongo_config_1
      - mongo_config_2
      - mongo_config_3
      - mongo_shard_1
      - mongo_shard_2
    networks:
      - mongodb-network
    restart: "no"
    entrypoint: ["/bin/sh", "-c"]
    command: >
      echo "Waiting for MongoDB instances to be ready...";
      until mongosh --host mongo-db-config-1 --eval "db.adminCommand('ping')"; do sleep 5; done;
      until mongosh --host mongo-db-config-2 --eval "db.adminCommand('ping')"; do sleep 5; done;
      until mongosh --host mongo-db-config-3 --eval "db.adminCommand('ping')"; do sleep 5; done;
      until mongosh --host mongo-db-shard-1 --eval "db.adminCommand('ping')"; do sleep 5; done;
      until mongosh --host mongo-db-shard-2 --eval "db.adminCommand('ping')"; do sleep 5; done;
      
      echo "Initializing Config Replica Set...";
      mongosh --host mongo-db-config-1 --eval '
        rs.initiate({
          _id: "configRS",
          configsvr: true,
          members: [
            { _id: 0, host: "mongo-db-config-1:27017" },
            { _id: 1, host: "mongo-db-config-2:27017" },
            { _id: 2, host: "mongo-db-config-3:27017" }
          ]
        })
      ';
      
      echo "Initializing Shard 1 Replica Set...";
      mongosh --host mongo-db-shard-1 --eval '
        rs.initiate({
          _id: "shard1RS",
          members: [
            { _id: 0, host: "mongo-db-shard-1:27017" }
          ]
        })
      ';
      
      echo "Initializing Shard 2 Replica Set...";
      mongosh --host mongo-db-shard-2 --eval '
        rs.initiate({
          _id: "shard2RS",
          members: [
            { _id: 0, host: "mongo-db-shard-2:27017" }
          ]
        })
      ';
      
      echo "Initialization complete!";

  # Mongos Router
  mongos:
    container_name: mongo-db-mongos
    image: mongo:8
    depends_on:
      - init-mongo
    command: mongos --configdb configRS/mongo-db-config-1:27017,mongo-db-config-2:27017,mongo-db-config-3:27017 --bind_ip_all
    ports:
      - "27017:27017"
    networks:
      - mongodb-network
    restart: unless-stopped

networks:
  mongodb-network:
    driver: bridge

volumes:
  mongo_config_1_data:
  mongo_config_2_data:
  mongo_config_3_data:
  mongo_shard_1_data:
  mongo_shard_2_data:
