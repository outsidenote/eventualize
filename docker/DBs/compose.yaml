name: evdb-databases

volumes:
  mssql:
  psql:
  mongodb_data:
  # mssqllatin:
  # mysql:
  # mysql5:
  # mysql8:
  # psql96:
  # psql13:
  # mariadb:
  # cockroachdb:
  # bigquery:

services:

  sqlserver:
    container_name: sqlserver-event-source
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "MasadNetunim12!@"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    # command: sh -c ' chmod +x /docker_init/entrypoint.sh; /docker_init/entrypoint.sh & /opt/mssql/bin/sqlservr;'
    restart: unless-stopped

  mssql-tools:
    # This service uses the official Microsoft SQL Server tools image
    # its allows you to use tools like sqlcmd, bcp, and other command-line utilities
    # You can interact with the mssql-tools container by executing
    # `docker exec -it mssql-tools bash`
    # From there, you can use sqlcmd, bcp, and other tools as needed.
    container_name: mssql-tools
    image: mcr.microsoft.com/mssql-tools
    depends_on:
      - sqlserver
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "MasadNetunim12!@"
    stdin_open: true
    tty: true
    
  psql:
    container_name: psql-event-source
    image: postgres:latest
    environment:
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: MasadNetunim12!@
      POSTGRES_DB: test_db
    volumes:
      - psql:/var/lib/postgresql/data
      - ./dev/docker_psql_init:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432
    restart: unless-stopped
    
  mongodb:
    image: mongo:8
    container_name: mongodb-event-source
    volumes:
      - mongodb_data:/data/db
    environment:
      #  MONGO_INITDB_ROOT_USERNAME: rootuser
      #  MONGO_INITDB_ROOT_PASSWORD: MasadNetunim12!@
      MONGO_INITDB_DATABASE: evdb
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    ports:
      - "27017:27017"
    command: "--bind_ip_all --quiet --logpath /dev/null --replSet rs0"
    restart: unless-stopped
  mongo-init:
    image: mongo:8
    container_name: mongodb-event-source-init
    depends_on:
      mongodb:
        condition: service_healthy
    command: >
      mongosh --host mongodb:27017 --eval
      '
      rs.initiate( {
         _id : "rs0",
         members: [
            { _id: 0, host: "localhost:27017" }
         ]
      })
      '
    restart: no

      
  # psql13:
  #   image: postgres:13
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: MasadNetunim12!@
  #     POSTGRES_DB: test_db
  #   volumes:
  #     - psql13:/var/lib/postgresql/data
  #     - ./dev/docker_psql_init:/docker-entrypoint-initdb.d
  #   ports:
  #     - 5434:5432
  #   restart: unless-stopped
  # psql96:
  #   image: postgres:9.6
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: MasadNetunim12!@
  #     POSTGRES_DB: test_db
  #   volumes:
  #     - psql96:/var/lib/postgresql/data
  #     - ./dev/docker_psql_init:/docker-entrypoint-initdb.d
  #   ports:
  #     - 5433:5432
  #   restart: unless-stopped
  # mariadb:
  #   image: mariadb
  #   restart: always
  #   environment:
  #     MYSQL_ROOT_PASSWORD: MasadNetunim12!@
  #     MYSQL_DATABASE: test_db
  #   ports:
  #     - 3307:3306
  #   volumes:
  #     - mariadb:/var/lib/mysql
  #     - ./dev/docker_mysql_init:/docker-entrypoint-initdb.d
  #   restart: unless-stopped
  
  # mysql:
  #   container_name: mysql-event-source
  #   image: mysql:latest
  #   command: --default-authentication-plugin=mysql_native_password\
  #   environment:
  #     MYSQL_ROOT_PASSWORD: MasadNetunim12!@
  #     MYSQL_DATABASE: test_db
  #   ports:
  #     - 3308:3306
  #   volumes:
  #     - mysql:/var/lib/mysql
  #     - ./dev/docker_mysql_init:/docker-entrypoint-initdb.d
  #   restart: unless-stopped
  # mysql8:
  #   image: mysql:8.0.21
  #   command: --default-authentication-plugin=mysql_native_password
  #   restart: always
  #   environment:
  #     MYSQL_ROOT_PASSWORD: MasadNetunim12!@
  #     MYSQL_DATABASE: test
  #   ports:
  #     - 3308:3306
  #   volumes:
  #     - mysql8:/var/lib/mysql
  #     - ./dev/docker_mysql_init:/docker-entrypoint-initdb.d
  #   restart: unless-stopped
  # mysql5:
  #   image: mysql:5.7.22
  #   command: --default-authentication-plugin=mysql_native_password
  #   restart: always
  #   environment:
  #     MYSQL_ROOT_PASSWORD: MasadNetunim12!@
  #     MYSQL_DATABASE: test
  #   ports:
  #     - 3306:3306
  #   volumes:
  #     - mysql5:/var/lib/mysql
  #     - ./dev/docker_mysql_init:/docker-entrypoint-initdb.d
  #   restart: unless-stopped
    
  # sqlserverlatin:
  #   image: 'mcr.microsoft.com/mssql/server:2017-latest-ubuntu'
  #   volumes:
  #   - mssqllatin:/var/opt/mssql/data
  #   - ./dev/docker_sqlserver:/docker_init
  #   environment:
  #     ACCEPT_EULA: "Y"
  #     SA_PASSWORD: MasadNetunim12!@"
  #     MSSQL_COLLATION: Latin1_General_CS_AS
  #     MSSQL_PID: "Express"
  #   ports:
  #     - 1434:1433
  #   command: sh -c ' chmod +x /docker_init/entrypoint.sh; /docker_init/entrypoint.sh & /opt/mssql/bin/sqlservr;'
  #   restart: unless-stopped
  # cockroachdb:
  #   image: cockroachdb/cockroach:v22.1.1
  #   volumes:
  #     - cockroachdb:/cockroach/cockroach-data
  #   ports:
  #     - 26257:26257
  #   command: start-single-node --insecure
  #   restart: unless-stopped
  # bigquery:
  #   image: ghcr.io/goccy/bigquery-emulator:latest
  #   volumes:
  #     - ./dev/docker_bigquery:/data
  #     - ./dev/docker_bigquery:/docker_init
  #   ports:
  #     - 9050:9050
  #     - 9060:9060
  #   entrypoint: sh -c 'chmod +x /docker_init/data.sh; /docker_init/data.sh'
  #   restart: unless-stopped
    
